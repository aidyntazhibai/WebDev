# def first_last6(nums):
#     n = len(nums)-1
    
#     if nums[0] == 6 or nums[n] == 6:
#         return True
#     else:
#         return False



# def common_end(a, b):
#     na = len(a)-1
#     nb = len(b)-1
    
#     if a[0] == b[0] or a[na]==b[nb]:
#         return True
#     else:
#         return False
    
# def reverse3(nums):
#     return nums[::-1]


# def middle_way(a, b):
#     nums = [a[1], b[1]]
#     return nums



# def same_first_last(nums):
#     if len(nums) >= 1:
#         if nums[0] == nums[len(nums)-1]:
#         return True
#         else:
#         return False
#     else:
#         return False
    


# def sum3(nums):
#     res = 0
#     res += nums[0]+nums[1]+nums[2]
#     return res




# def max_end3(nums):
#     n = len(nums)-1
#     x = nums[0]
#     if nums[0] > nums[n]:
#         x = nums[0]
#     else:
#         x = nums[n]
    
#     for i in range(3):
#         nums[i] = x
        
#     return nums


# def make_ends(nums):
#     n = len(nums)-1
#     res = [nums[0], nums[n]]
#     return res 


# def make_pi():
#     res = [3, 1, 4]
#     return res


# def rotate_left3(nums):
#     res = [nums[1], nums[2], nums[0]]
#     return res 